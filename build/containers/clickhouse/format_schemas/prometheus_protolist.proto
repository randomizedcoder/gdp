//
// prometheus.proto
//

//---------------------------------------------------
//
// This protobuf allows collecting of data from go programs that
// have prometheus counters and histrograms described
//
// Please note the key idea is to constrain the label entropy, so
// we have exactly x3 labels per metric
//
// The go programs have the promethus counters implmented like this:

// startTime := time.Now()
// defer func() {
//   d.pH.WithLabelValues("Deserialize", "complete", "count").Observe(time.Since(startTime).Seconds())
// }()
// d.pC.WithLabelValues("Deserialize", "start", "count").Inc()

// Error counters
// d.pC.WithLabelValues("Deserialize", "netlinkerDoneCh", "error").Inc()

// x.pC = promauto.NewCounterVec(
//   prometheus.CounterOpts{
//     Subsystem: "xtcp",
//     Name:      "counts",
//     Help:      "xtcp counts",
//   },
//   []string{"function", "variable", "type"},
// )

// Not doing the historgrams yet

// x.pH = promauto.NewSummaryVec(
//   prometheus.SummaryOpts{
//     Subsystem: "xtcp",
//     Name:      "histograms",
//     Help:      "xtcp historgrams",
//     Objectives: map[float64]float64{
//       0.1:  quantileError,
//       0.5:  quantileError,
//       0.99: quantileError,
//     },
//     MaxAge: summaryVecMaxAge,
//   },
//   []string{"function", "variable", "type"},
// )
//---------------------------------------------------

syntax = "proto3";

package prometheus.v1;

// https://developers.google.com/protocol-buffers/docs/reference/go-generated
option go_package = "./pkg/prometheus";

// https://clickhouse.com/docs/en/interfaces/formats#protobuflist
message Envelope {

	message PromRecordCounter {

		double timestamp_ns                             = 10;

		string hostname                                 = 20;

		string pop                                      = 30;

		string label                                    = 50; // free form string

		string tag                                      = 60; // free form string

		uint64 poll_counter                             = 70;

		uint64 record_counter                           = 80;

		string function                                 = 90; // []string{"function", "variable", "type"},

		string variable                                 = 100;

		string type                                     = 110;

		double value                                    = 120;

	};

	repeated PromRecordCounter rows  = 1;
};

// Build this using buf build ( https://buf.build/ ), see the buf config in the root folder

// Little reminder on compiling
// https://developers.google.com/protocol-buffers/docs/gotutorial
// go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
// protoc --go_out=paths=source_relative:. prometheus.proto

// https://protobuf.dev/programming-guides/encoding/#structure

// end
