//
// GDP - config
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: gdp_config/v1/gdp_config.proto

package gdp_config

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// gdp configuration
type GdpConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Poll frequency
	// This is how often gdp polls it's metric end point
	// https://pkg.go.dev/google.golang.org/protobuf/types/known/durationpb
	PollFrequency *durationpb.Duration `protobuf:"bytes,20,opt,name=poll_frequency,json=pollFrequency,proto3" json:"poll_frequency,omitempty"`
	// Poll timeout per name space
	// Must be less than the poll frequency
	PollTimeout *durationpb.Duration `protobuf:"bytes,30,opt,name=poll_timeout,json=pollTimeout,proto3" json:"poll_timeout,omitempty"`
	// Maximum number of loops, or zero (0) for forever
	MaxLoops uint64 `protobuf:"varint,40,opt,name=max_loops,json=maxLoops,proto3" json:"max_loops,omitempty"`
	// kafka:127.0.0.1:9092, or null:
	Dest string `protobuf:"bytes,130,opt,name=dest,proto3" json:"dest,omitempty"`
	// Write marhselled data to writeFiles number of files ( to allow debugging of the serialization )
	// gdp will capture this many examples of the marshalled data
	DestWriteFiles uint32 `protobuf:"varint,140,opt,name=dest_write_files,json=destWriteFiles,proto3" json:"dest_write_files,omitempty"`
	// PromProtoFile
	PromProtoFile string `protobuf:"bytes,150,opt,name=prom_proto_file,json=promProtoFile,proto3" json:"prom_proto_file,omitempty"`
	// PromListProtoFile
	PromListProtoFile string `protobuf:"bytes,160,opt,name=prom_list_proto_file,json=promListProtoFile,proto3" json:"prom_list_proto_file,omitempty"`
	// Kafka schema registry url
	KafkaSchemaUrl string `protobuf:"bytes,170,opt,name=kafka_schema_url,json=kafkaSchemaUrl,proto3" json:"kafka_schema_url,omitempty"`
	// Kafka Produce context timeout.  Use 0 for no context timeout
	// Recommend a small timeout, like 1-2 seconds
	// kgo seems to have a bug, because the timeout is always expired
	KafkaProduceTimeout *durationpb.Duration `protobuf:"bytes,180,opt,name=kafka_produce_timeout,json=kafkaProduceTimeout,proto3" json:"kafka_produce_timeout,omitempty"`
	// DebugLevel
	DebugLevel uint32 `protobuf:"varint,190,opt,name=debug_level,json=debugLevel,proto3" json:"debug_level,omitempty"`
	// kafka DebugLevel
	KafkaDebugLevel uint32 `protobuf:"varint,200,opt,name=kafka_debug_level,json=kafkaDebugLevel,proto3" json:"kafka_debug_level,omitempty"`
	// Label applied to the protobuf
	Label string `protobuf:"bytes,210,opt,name=label,proto3" json:"label,omitempty"`
	// Tag applied to the protobuf
	Tag           string                            `protobuf:"bytes,220,opt,name=tag,proto3" json:"tag,omitempty"`
	RequestConfig *GdpConfig_PromethusRequestConfig `protobuf:"bytes,250,opt,name=request_config,json=requestConfig,proto3" json:"request_config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GdpConfig) Reset() {
	*x = GdpConfig{}
	mi := &file_gdp_config_v1_gdp_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GdpConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GdpConfig) ProtoMessage() {}

func (x *GdpConfig) ProtoReflect() protoreflect.Message {
	mi := &file_gdp_config_v1_gdp_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GdpConfig.ProtoReflect.Descriptor instead.
func (*GdpConfig) Descriptor() ([]byte, []int) {
	return file_gdp_config_v1_gdp_config_proto_rawDescGZIP(), []int{0}
}

func (x *GdpConfig) GetPollFrequency() *durationpb.Duration {
	if x != nil {
		return x.PollFrequency
	}
	return nil
}

func (x *GdpConfig) GetPollTimeout() *durationpb.Duration {
	if x != nil {
		return x.PollTimeout
	}
	return nil
}

func (x *GdpConfig) GetMaxLoops() uint64 {
	if x != nil {
		return x.MaxLoops
	}
	return 0
}

func (x *GdpConfig) GetDest() string {
	if x != nil {
		return x.Dest
	}
	return ""
}

func (x *GdpConfig) GetDestWriteFiles() uint32 {
	if x != nil {
		return x.DestWriteFiles
	}
	return 0
}

func (x *GdpConfig) GetPromProtoFile() string {
	if x != nil {
		return x.PromProtoFile
	}
	return ""
}

func (x *GdpConfig) GetPromListProtoFile() string {
	if x != nil {
		return x.PromListProtoFile
	}
	return ""
}

func (x *GdpConfig) GetKafkaSchemaUrl() string {
	if x != nil {
		return x.KafkaSchemaUrl
	}
	return ""
}

func (x *GdpConfig) GetKafkaProduceTimeout() *durationpb.Duration {
	if x != nil {
		return x.KafkaProduceTimeout
	}
	return nil
}

func (x *GdpConfig) GetDebugLevel() uint32 {
	if x != nil {
		return x.DebugLevel
	}
	return 0
}

func (x *GdpConfig) GetKafkaDebugLevel() uint32 {
	if x != nil {
		return x.KafkaDebugLevel
	}
	return 0
}

func (x *GdpConfig) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *GdpConfig) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *GdpConfig) GetRequestConfig() *GdpConfig_PromethusRequestConfig {
	if x != nil {
		return x.RequestConfig
	}
	return nil
}

// MarshalConfig is the definition of the mashaling the GDP is going
// to perform
type MarshalConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Protosingle, Protobuf, ProtobufList
	MarshalType string `protobuf:"bytes,10,opt,name=marshal_type,json=marshalType,proto3" json:"marshal_type,omitempty"`
	KafkaHeader bool   `protobuf:"varint,20,opt,name=kafka_header,json=kafkaHeader,proto3" json:"kafka_header,omitempty"`
	// marshal type determines if protodelimiting occurs
	// but we're documenting it to make it clear
	Protodelim           bool   `protobuf:"varint,30,opt,name=protodelim,proto3" json:"protodelim,omitempty"`
	CreateDatabaseSchema bool   `protobuf:"varint,40,opt,name=create_database_schema,json=createDatabaseSchema,proto3" json:"create_database_schema,omitempty"`
	MaxPollSend          uint32 `protobuf:"varint,50,opt,name=max_poll_send,json=maxPollSend,proto3" json:"max_poll_send,omitempty"`
	SchemaID             uint32 `protobuf:"varint,60,opt,name=schema_i_d,json=schemaID,proto3" json:"schema_i_d,omitempty"`
	Filename             string `protobuf:"bytes,70,opt,name=filename,proto3" json:"filename,omitempty"`
	Topic                string `protobuf:"bytes,80,opt,name=topic,proto3" json:"topic,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *MarshalConfig) Reset() {
	*x = MarshalConfig{}
	mi := &file_gdp_config_v1_gdp_config_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarshalConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarshalConfig) ProtoMessage() {}

func (x *MarshalConfig) ProtoReflect() protoreflect.Message {
	mi := &file_gdp_config_v1_gdp_config_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarshalConfig.ProtoReflect.Descriptor instead.
func (*MarshalConfig) Descriptor() ([]byte, []int) {
	return file_gdp_config_v1_gdp_config_proto_rawDescGZIP(), []int{1}
}

func (x *MarshalConfig) GetMarshalType() string {
	if x != nil {
		return x.MarshalType
	}
	return ""
}

func (x *MarshalConfig) GetKafkaHeader() bool {
	if x != nil {
		return x.KafkaHeader
	}
	return false
}

func (x *MarshalConfig) GetProtodelim() bool {
	if x != nil {
		return x.Protodelim
	}
	return false
}

func (x *MarshalConfig) GetCreateDatabaseSchema() bool {
	if x != nil {
		return x.CreateDatabaseSchema
	}
	return false
}

func (x *MarshalConfig) GetMaxPollSend() uint32 {
	if x != nil {
		return x.MaxPollSend
	}
	return 0
}

func (x *MarshalConfig) GetSchemaID() uint32 {
	if x != nil {
		return x.SchemaID
	}
	return 0
}

func (x *MarshalConfig) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *MarshalConfig) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

type GdpConfig_PromethusRequestConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Prometheus metrics url
	// e.g. http://localhost:8888/metrics
	MetricsUrl string `protobuf:"bytes,10,opt,name=metrics_url,json=metricsUrl,proto3" json:"metrics_url,omitempty"`
	// allowPrefix for the filtering
	AllowPrefix string `protobuf:"bytes,20,opt,name=allow_prefix,json=allowPrefix,proto3" json:"allow_prefix,omitempty"`
	// promethus max retries
	MaxRetries     uint32               `protobuf:"varint,30,opt,name=max_retries,json=maxRetries,proto3" json:"max_retries,omitempty"`
	RequestBackoff *durationpb.Duration `protobuf:"bytes,40,opt,name=request_backoff,json=requestBackoff,proto3" json:"request_backoff,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GdpConfig_PromethusRequestConfig) Reset() {
	*x = GdpConfig_PromethusRequestConfig{}
	mi := &file_gdp_config_v1_gdp_config_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GdpConfig_PromethusRequestConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GdpConfig_PromethusRequestConfig) ProtoMessage() {}

func (x *GdpConfig_PromethusRequestConfig) ProtoReflect() protoreflect.Message {
	mi := &file_gdp_config_v1_gdp_config_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GdpConfig_PromethusRequestConfig.ProtoReflect.Descriptor instead.
func (*GdpConfig_PromethusRequestConfig) Descriptor() ([]byte, []int) {
	return file_gdp_config_v1_gdp_config_proto_rawDescGZIP(), []int{0, 0}
}

func (x *GdpConfig_PromethusRequestConfig) GetMetricsUrl() string {
	if x != nil {
		return x.MetricsUrl
	}
	return ""
}

func (x *GdpConfig_PromethusRequestConfig) GetAllowPrefix() string {
	if x != nil {
		return x.AllowPrefix
	}
	return ""
}

func (x *GdpConfig_PromethusRequestConfig) GetMaxRetries() uint32 {
	if x != nil {
		return x.MaxRetries
	}
	return 0
}

func (x *GdpConfig_PromethusRequestConfig) GetRequestBackoff() *durationpb.Duration {
	if x != nil {
		return x.RequestBackoff
	}
	return nil
}

var File_gdp_config_v1_gdp_config_proto protoreflect.FileDescriptor

const file_gdp_config_v1_gdp_config_proto_rawDesc = "" +
	"\n" +
	"\x1egdp_config/v1/gdp_config.proto\x12\rgdp_config.v1\x1a\x1egoogle/protobuf/duration.proto\x1a\x1bbuf/validate/validate.proto\"\xcb\t\n" +
	"\tGdpConfig\x12S\n" +
	"\x0epoll_frequency\x18\x14 \x01(\v2\x19.google.protobuf.DurationB\x11\xbaH\x0e\xc8\x01\x01\xaa\x01\b\"\x04\b\x80\xf5$*\x00R\rpollFrequency\x12O\n" +
	"\fpoll_timeout\x18\x1e \x01(\v2\x19.google.protobuf.DurationB\x11\xbaH\x0e\xc8\x01\x01\xaa\x01\b\"\x04\b\x80\xf5$*\x00R\vpollTimeout\x12+\n" +
	"\tmax_loops\x18( \x01(\x04B\x0e\xbaH\v\xc8\x01\x002\x06\x18\xa0\x8d\x06(\x00R\bmaxLoops\x12!\n" +
	"\x04dest\x18\x82\x01 \x01(\tB\f\xbaH\t\xc8\x01\x01r\x04\x10\x04\x18(R\x04dest\x128\n" +
	"\x10dest_write_files\x18\x8c\x01 \x01(\rB\r\xbaH\n" +
	"\xc8\x01\x00*\x05\x18\xe8\a(\x00R\x0edestWriteFiles\x125\n" +
	"\x0fprom_proto_file\x18\x96\x01 \x01(\tB\f\xbaH\t\xc8\x01\x00r\x04\x10\x01\x18PR\rpromProtoFile\x12>\n" +
	"\x14prom_list_proto_file\x18\xa0\x01 \x01(\tB\f\xbaH\t\xc8\x01\x00r\x04\x10\x01\x18PR\x11promListProtoFile\x127\n" +
	"\x10kafka_schema_url\x18\xaa\x01 \x01(\tB\f\xbaH\t\xc8\x01\x00r\x04\x10\x01\x18<R\x0ekafkaSchemaUrl\x12`\n" +
	"\x15kafka_produce_timeout\x18\xb4\x01 \x01(\v2\x19.google.protobuf.DurationB\x10\xbaH\r\xc8\x01\x00\xaa\x01\a\"\x03\b\xd8\x042\x00R\x13kafkaProduceTimeout\x12/\n" +
	"\vdebug_level\x18\xbe\x01 \x01(\rB\r\xbaH\n" +
	"\xc8\x01\x01*\x05\x18\xe8\a(\x00R\n" +
	"debugLevel\x12:\n" +
	"\x11kafka_debug_level\x18\xc8\x01 \x01(\rB\r\xbaH\n" +
	"\xc8\x01\x01*\x05\x18\xe8\a(\x00R\x0fkafkaDebugLevel\x12!\n" +
	"\x05label\x18\xd2\x01 \x01(\tB\n" +
	"\xbaH\a\xc8\x01\x00r\x02\x18(R\x05label\x12\x1d\n" +
	"\x03tag\x18\xdc\x01 \x01(\tB\n" +
	"\xbaH\a\xc8\x01\x00r\x02\x18(R\x03tag\x12W\n" +
	"\x0erequest_config\x18\xfa\x01 \x01(\v2/.gdp_config.v1.GdpConfig.PromethusRequestConfigR\rrequestConfig\x1a\xfe\x01\n" +
	"\x16PromethusRequestConfig\x12-\n" +
	"\vmetrics_url\x18\n" +
	" \x01(\tB\f\xbaH\t\xc8\x01\x01r\x04\x10\n" +
	"\x18PR\n" +
	"metricsUrl\x12/\n" +
	"\fallow_prefix\x18\x14 \x01(\tB\f\xbaH\t\xc8\x01\x01r\x04\x10\x01\x18PR\vallowPrefix\x12.\n" +
	"\vmax_retries\x18\x1e \x01(\rB\r\xbaH\n" +
	"\xc8\x01\x01*\x05\x18\xe8\a(\x00R\n" +
	"maxRetries\x12T\n" +
	"\x0frequest_backoff\x18( \x01(\v2\x19.google.protobuf.DurationB\x10\xbaH\r\xc8\x01\x01\xaa\x01\a\"\x03\b\x84\a*\x00R\x0erequestBackoff:s\xbaHp\x1an\n" +
	"\x0fGdp_Config.poll\x122Poll timeout must be less than poll poll_frequency\x1a'this.poll_frequency > this.poll_timeout\"\xff\x02\n" +
	"\rMarshalConfig\x12/\n" +
	"\fmarshal_type\x18\n" +
	" \x01(\tB\f\xbaH\t\xc8\x01\x01r\x04\x10\x01\x18PR\vmarshalType\x12)\n" +
	"\fkafka_header\x18\x14 \x01(\bB\x06\xbaH\x03\xc8\x01\x01R\vkafkaHeader\x12&\n" +
	"\n" +
	"protodelim\x18\x1e \x01(\bB\x06\xbaH\x03\xc8\x01\x01R\n" +
	"protodelim\x12<\n" +
	"\x16create_database_schema\x18( \x01(\bB\x06\xbaH\x03\xc8\x01\x01R\x14createDatabaseSchema\x121\n" +
	"\rmax_poll_send\x182 \x01(\rB\r\xbaH\n" +
	"\xc8\x01\x00*\x05\x18\x90N(\x00R\vmaxPollSend\x12+\n" +
	"\n" +
	"schema_i_d\x18< \x01(\rB\r\xbaH\n" +
	"\xc8\x01\x00*\x05\x18\x90N(\x00R\bschemaID\x12(\n" +
	"\bfilename\x18F \x01(\tB\f\xbaH\t\xc8\x01\x00r\x04\x10\x01\x18PR\bfilename\x12\"\n" +
	"\x05topic\x18P \x01(\tB\f\xbaH\t\xc8\x01\x00r\x04\x10\x01\x18PR\x05topicB\x86\x01\n" +
	"\x11com.gdp_config.v1B\x0eGdpConfigProtoP\x01Z\x10./pkg/gdp_config\xa2\x02\x03GXX\xaa\x02\fGdpConfig.V1\xca\x02\fGdpConfig\\V1\xe2\x02\x18GdpConfig\\V1\\GPBMetadata\xea\x02\rGdpConfig::V1b\x06proto3"

var (
	file_gdp_config_v1_gdp_config_proto_rawDescOnce sync.Once
	file_gdp_config_v1_gdp_config_proto_rawDescData []byte
)

func file_gdp_config_v1_gdp_config_proto_rawDescGZIP() []byte {
	file_gdp_config_v1_gdp_config_proto_rawDescOnce.Do(func() {
		file_gdp_config_v1_gdp_config_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_gdp_config_v1_gdp_config_proto_rawDesc), len(file_gdp_config_v1_gdp_config_proto_rawDesc)))
	})
	return file_gdp_config_v1_gdp_config_proto_rawDescData
}

var file_gdp_config_v1_gdp_config_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_gdp_config_v1_gdp_config_proto_goTypes = []any{
	(*GdpConfig)(nil),                        // 0: gdp_config.v1.GdpConfig
	(*MarshalConfig)(nil),                    // 1: gdp_config.v1.MarshalConfig
	(*GdpConfig_PromethusRequestConfig)(nil), // 2: gdp_config.v1.GdpConfig.PromethusRequestConfig
	(*durationpb.Duration)(nil),              // 3: google.protobuf.Duration
}
var file_gdp_config_v1_gdp_config_proto_depIdxs = []int32{
	3, // 0: gdp_config.v1.GdpConfig.poll_frequency:type_name -> google.protobuf.Duration
	3, // 1: gdp_config.v1.GdpConfig.poll_timeout:type_name -> google.protobuf.Duration
	3, // 2: gdp_config.v1.GdpConfig.kafka_produce_timeout:type_name -> google.protobuf.Duration
	2, // 3: gdp_config.v1.GdpConfig.request_config:type_name -> gdp_config.v1.GdpConfig.PromethusRequestConfig
	3, // 4: gdp_config.v1.GdpConfig.PromethusRequestConfig.request_backoff:type_name -> google.protobuf.Duration
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_gdp_config_v1_gdp_config_proto_init() }
func file_gdp_config_v1_gdp_config_proto_init() {
	if File_gdp_config_v1_gdp_config_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gdp_config_v1_gdp_config_proto_rawDesc), len(file_gdp_config_v1_gdp_config_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gdp_config_v1_gdp_config_proto_goTypes,
		DependencyIndexes: file_gdp_config_v1_gdp_config_proto_depIdxs,
		MessageInfos:      file_gdp_config_v1_gdp_config_proto_msgTypes,
	}.Build()
	File_gdp_config_v1_gdp_config_proto = out.File
	file_gdp_config_v1_gdp_config_proto_goTypes = nil
	file_gdp_config_v1_gdp_config_proto_depIdxs = nil
}
